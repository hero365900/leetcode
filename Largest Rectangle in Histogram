#include <iostream>
#include <stack>
#include <vector>
using namespace std;

int largestRectangleArea(vector<int> &height) {
  stack<int> s;
  int width(0), idx(0), area(0);
  for (int i = 0; i != height.size(); ++i) {
    if (s.empty() || height[i] >= height[s.top()]) {
      s.push(i);
    } else {
      idx = s.top();
      s.pop();
      width = (s.empty() ? i : i - s.top() - 1);
      area = max(height[idx] * width, area);
      --i;
    }
  }
  while (!s.empty()) {
    idx = s.top();
    s.pop();
    width = (s.empty() ? height.size() : height.size() - s.top() - 1);
    area = max(height[idx] * width, area);
  }
  return area;
}

int main() {
  int a[] = {1, 2, 2};
  vector<int> b((int*)a, (int*)a + 3);
  cout << largestRectangleArea(b) << endl;
  return 0;
}
