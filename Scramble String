#include <iostream>
using namespace std;

int cnt[26];
template<int N>
void inline clear(int (&a)[N]) {
  for (int i = 0; i != N; ++i) {
    a[i] = 0;
  }
}

bool isOK(string &s1, int beg1, int len1, string &s2, int beg2, int len2) {
  //cout << "isOK " << s1.substr(beg1, len1) << " /\\ " << s2.substr(beg2, len2);
  if (len1 != len2) {
    //cout << " false" << endl; 
    return false;
  }
  clear(cnt);
  for (int i = beg1; i != beg1 + len1; ++i) {++cnt[s1[i] - 'a'];}
  for (int i = beg2; i != beg2 + len2; ++i) {
    if ((--cnt[s2[i] - 'a']) < 0) {
      //cout << " false" << endl;
      return false;
    }
  }
  //cout << " true" << endl;
  return true;
}

bool _isScramble(string &s1, int beg1, int len1, string &s2, int beg2, int len2) {
  //cout << s1.substr(beg1, len1) << " <--> " << s2.substr(beg2, len2) << endl;
  if (len1 != len2) return false;
  if (len1 == 0) return true;
  if (len1 == 1) return s1[beg1] == s2[beg2];
  bool finished(false);
  for (int l = 1; l != len1; ++l) {
    if (isOK(s1, beg1, l, s2, beg2, l) && isOK(s1, beg1 + l, len1 - l, s2, beg2 + l, len2 - l)) {
      finished = _isScramble(s1, beg1, l, s2, beg2, l) & _isScramble(s1, beg1 + l, len1 - l, s2, beg2 + l, len2 - l);
      if (finished) return true;
    } else {
      if (isOK(s1, beg1, l, s2, beg2 + len2 - l, l) && isOK(s1, beg1 + l, len1 - l, s2, beg2, len2 - l)) {
        finished = _isScramble(s1, beg1, l, s2, beg2 + len2 - l, l) & _isScramble(s1, beg1 + l, len1 - l, s2, beg2, len2 - l);
        if (finished) return true;
      }
    }  // end else
  }  // end for
  return finished;
}

bool isScramble(string s1, string s2) {
  if (s1.length() != s2.length()) return false;
  if (s1.length() == 0) return true;
  /*int k[26];
  for (int i = 0; i != 26; ++i) {
    k[i] = 0;
  }
  for (int i = 0; i != s1.length(); ++i) {++k[s1[i] - 'a'];}
  for (int i = 0; i != s2.length(); ++i) {
    if (--k[s2[i] - 'a'] < 0) return false;
  }
  return true;*/
  return _isScramble(s1, 0, s1.length(), s2, 0, s2.length());
}

int main() {
  string s1, s2;
  while (cin >> s1 >> s2) {
    cout << isScramble(s1, s2) << endl;
  }
  return 0;
}
